apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
        - name: database
          image: mysql:8.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: Baochau2903-
            - name: MYSQL_DATABASE
              value: medical_diagnosis_dba
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: database-initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: database-initdb
          configMap:
            name: database-schema

---

apiVersion: v1
kind: Service
metadata:
  name: database-service
spec:
  selector:
    app: database
  ports:
    - port: 3306
      targetPort: 3306

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: database-schema
data:
  migrate.sql: |
    CREATE DATABASE IF NOT EXISTS medical_diagnosis_dba;
    USE medical_diagnosis_dba;

    CREATE TABLE IF NOT EXISTS users (
      id INT AUTO_INCREMENT PRIMARY KEY,
      first_name VARCHAR(255),
      last_name VARCHAR(255),
      email VARCHAR(255) NOT NULL UNIQUE,
      password_hash TEXT NOT NULL,
      role ENUM('doctor', 'patient', 'admin'),
      profile_picture TEXT,
      bio TEXT
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

    CREATE TABLE IF NOT EXISTS statuses (
      id INT AUTO_INCREMENT PRIMARY KEY,
      name VARCHAR(255) NOT NULL UNIQUE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

    CREATE TABLE IF NOT EXISTS hospitals (
      id INT AUTO_INCREMENT PRIMARY KEY,
      name VARCHAR(255) NOT NULL UNIQUE,
      description TEXT,
      address TEXT,
      phone VARCHAR(20),
      email VARCHAR(255),
      website VARCHAR(255),
      established DATE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

    CREATE TABLE IF NOT EXISTS medical_examination_forms (
      id INT AUTO_INCREMENT PRIMARY KEY,
      doctor_id INT,
      patient_id INT,
      hospital_id INT,
      status_id INT,
      age INT,
      gender BOOLEAN,
      ethnicity TINYINT,
      education_level TINYINT,
      bmi FLOAT,
      smoking BOOLEAN,
      alcohol_consumption FLOAT,
      physical_activity FLOAT,
      diet_quality FLOAT,
      sleep_quality FLOAT,
      family_history_parkinsons BOOLEAN,
      traumatic_brain_injury BOOLEAN,
      hypertension BOOLEAN,
      diabetes BOOLEAN,
      depression BOOLEAN,
      stroke BOOLEAN,
      systolic_bp INT,
      diastolic_bp INT,
      cholesterol_total FLOAT,
      cholesterol_ldl FLOAT,
      cholesterol_hdl FLOAT,
      cholesterol_triglycerides FLOAT,
      updrs_score FLOAT,
      moca_score FLOAT,
      functional_assessment FLOAT,
      tremor BOOLEAN,
      rigidity BOOLEAN,
      bradykinesia BOOLEAN,
      postural_instability BOOLEAN,
      speech_problems BOOLEAN,
      sleep_disorders BOOLEAN,
      constipation BOOLEAN,
      diagnosis BOOLEAN,
      FOREIGN KEY (doctor_id) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE,
      FOREIGN KEY (patient_id) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE,
      FOREIGN KEY (hospital_id) REFERENCES hospitals(id) ON UPDATE CASCADE ON DELETE CASCADE,
      FOREIGN KEY (status_id) REFERENCES statuses(id) ON UPDATE CASCADE ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

    CREATE TABLE IF NOT EXISTS results (
      id INT AUTO_INCREMENT PRIMARY KEY,
      medical_examination_form_id INT NOT NULL,
      lime_result_json TEXT,
      FOREIGN KEY (medical_examination_form_id)
        REFERENCES medical_examination_forms(id)
        ON UPDATE CASCADE ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

    CREATE TABLE IF NOT EXISTS doctor_decisions (
      id INT AUTO_INCREMENT PRIMARY KEY,
      result_id INT NOT NULL,
      doctor_decision BOOLEAN,
      FOREIGN KEY (result_id)
        REFERENCES results(id)
        ON UPDATE CASCADE ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: database-route
spec:
  to:
    kind: Service
    name: database-service
  port:
    targetPort: 3306
  tls:
    termination: edge
